(defvar locked false)
(defvar dashmcover false)
(defvar fullscreened false)

(defpoll thour :initial "0" :interval "60s" "date +'%I'")
(defpoll tmin :initial "0" :interval "60s" "date +'%M'")
(defpoll tpm :initial "0" :interval "60s" "date +'%p'")
(defpoll tdate :initial "0" :interval "60s" "date +'%d %b'")
(defpoll tday :initial "0" :interval "60s" "date +'%A'")

(defpoll wifi_icon :initial "" :interval "30s" "./scripts/wifi --ICON")
(defpoll wifi_essid :initial "" :interval "30s" "./scripts/wifi --ESSID")
(defpoll wifi_radio :initial "off" :interval "2s" "nmcli radio wifi")
(defpoll volumemute :initial "false" :interval "1m" "pamixer --get-mute")
(defpoll volume :initial "0" :interval "1m" "pamixer --get-volume")
(defpoll volicon :initial "0" :interval "1m" "bash ./scripts/sys_info --volicon")
(defpoll brightness :initial "0" :interval "1m" "brightnessctl -m | awk -F, '{print substr($4, 0, length($4)-1)}' | tr -d '%'")
(defpoll bat0 :initial "0" :interval "30s" "bash ./scripts/sys_info --bat")
(defpoll baticon :initial "" :interval "30s" "bash ./scripts/sys_info --baticon")
(defpoll bluetooth_icon :initial "disconnected" :interval "30s" "./scripts/bluetooth.sh --con_status")
(defpoll bluetooth_device :initial "--" :interval "30s" "./scripts/bluetooth.sh --devname")
(defvar caffeine false)

(deflisten notesc "./scripts/notesmd.py")

(deflisten workspacejson 
  :initial '[{"focused": true, "empty": false, "name": 1}, {"focused": false, "empty": true, "name": 2}, {"focused": false, "empty": true, "name": 3}, {"focused": false, "empty": true, "name": 4}, {"focused": false, "empty": true, "name": 5}]'
  "./scripts/workspace.py")

(deflisten psong "playerctl metadata --format '{{ title }}' -F")
(deflisten partist "playerctl metadata --format '{{ artist }}' -F")
(deflisten pcover "./scripts/pollcover.sh")
(deflisten pstatus "playerctl status -F")
(deflisten ptime 
  :initial '{
             "position": 0,
             "duration": 0,
             "readable": "0:00"}
  '
  "playerctl -F metadata -f '{ \"position\": {{position}}, \"duration\": {{mpris:length}}, \"readable\": \"{{duration(position)}}/{{duration(mpris:length)}}\" }'")
(deflisten pside :initial '
    {
        "volume": 0,
        "shuffle": "false",
        "loop": "Playlist"}
    '
  "playerctl -F metadata -f '{ \"volume\": {{volume*100}}, \"shuffle\": \"{{shuffle}}\", \"loop\": \"{{loop}}\" }'")
(deflisten psource "playerctl -F metadata -f '{{playerName}}'")

(defpoll hostname :initial "idk" :interval "24h" 'echo "$(whoami)@$(hostname)"')
(defpoll uptime :initial "idk" :interval "1m" "uptime -p")

(deflisten tasklistjson :initial "[]" "./scripts/tasklist.py")

(deflisten notifications :initial '{
                                    "count": 0,
                                    "dnd": false,
                                    "notifications": [],
                                    "popups": []}
    '
    "./scripts/notifCatch")


(defpoll weatherjson 
  :initial '{
             "FeelsLikeC": "0", 
             "FeelsLikeF": "0", 
             "cloudcover": "0", 
             "humidity": "0", 
             "localObsDateTime": "2000-00-00 07:27 AM", 
             "observation_time": "07:27 AM", 
             "precipInches": "0.0", 
             "precipMM": "0.0", 
             "pressure": "0", 
             "pressureInches": "0", 
             "temp_C": "0", 
             "temp_F": "0", 
             "uvIndex": "0", 
             "visibility": "0", 
             "visibilityMiles": "0", 
             "weatherCode": "727", 
             "weatherDesc": [{"value": "Idk"}], 
             "weatherIconUrl": [{"value": ""}], 
             "winddir16Point": "", 
             "winddirDegree": "0", 
             "windspeedKmph": "0", 
             "windspeedMiles": "0", 
             "icon": "idk", 
             "hourly": []}
  '
  :interval "1h" 
  "./scripts/weather.py")

(deflisten timerjson :initial '{"display": "??", "running": false}' `./scripts/timer.py`)

(defvar windowsjson "[[], [], [], [], []]")

(deflisten appsjson :initial '{"apps": []}' "./scripts/apps.py")

(deflisten eventsjson :initial '[]' "./scripts/events.py")

;; Windows

(include "./yuck/windows/bar.yuck")
(include "./yuck/windows/dashboard.yuck")
(include "./yuck/windows/notifications.yuck")
(include "./yuck/windows/dock.yuck")
(include "./yuck/windows/calendar.yuck")
(include "./yuck/windows/overview.yuck")
(include "./yuck/windows/sysctl.yuck")
(include "./yuck/windows/changeindicate.yuck")

;; Widgets

(include "./yuck/widgets/workspaces.yuck")
(include "./yuck/widgets/time.yuck")
(include "./yuck/widgets/battery.yuck")
(include "./yuck/widgets/system.yuck")
(include "./yuck/widgets/music.yuck")
(include "./yuck/widgets/keepopen.yuck")
(include "./yuck/widgets/useless.yuck")
(include "./yuck/widgets/weather.yuck")
(include "./yuck/widgets/launcher.yuck")
