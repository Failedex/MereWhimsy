
(defwindow bar 
  :geometry (geometry 
              :x "0%"
              :y "0%"
              :width "100%"
              :height 50
              :anchor "top center")
              
  :stacking "bottom"
  :exclusive true
  :monitor '["eDP-1", "<primary>", 0]'
  :wm-ignore false
  (barstruct))

(defwidget barstruct []
  (centerbox 
    :height 15
    :orientation "h"
    (top)
    (middle)
    (bottom)))
    

(defwidget top []
  (box
    :orientation "h"
    :space-evenly false
    :vexpand true
    (topstruct)
    (spacefiller)))
    

(defwidget middle [?f]
  (box
    :orientation "h"
    :space-evenly false
    :halign "center"
    :vexpand true
    :class "barstruct ${ !locked || f != "" ? 'left right' : '' }"
    (workspaces)))

(defwidget bottom []
  (box 
    :orientation "h"
    :space-evenly false
    :vexpand true
    (spacefiller)
    (bottomstruct)))

(defwidget topstruct [?f] 
  (box 
    :orientation "h"
    :space-evenly false
    :halign "start"
    :class "barstruct ${ !locked || f != '' ? 'right' : '' }"
    (keepupdate)
    (launchwid)
    (dashtoggle)
    (lockintoggle)))

(defwidget bottomstruct [?f] 
  (box
    :orientation "h"
    :space-evenly false
    :halign "end"
    :class "barstruct ${ !locked || f != '' ? 'left' : '' }"
    (stray)
    (system)
    (time)))
    

(defwidget lockintoggle []
  (button 
    :onclick "
      ${
        !locked ? 'swaymsg gaps outer all set 0'
        : 'swaymsg gaps outer all set 10 && swaymsg gaps top all set 0'
      } && ${EWW_CMD} update locked=${!locked}"
    :class "widget transparent"
    (label 
      :class "icon"
      :style "margin: 0px 1px;"
      :tooltip { locked ? "Locked in" : "Dilly dally"}
      :text { locked ? "󰌾" : ""})))

(defwidget sidedeco [area] 
  (overlay 
    (box 
      :width 20 
      :visible locked
      :class "sidedeco bottom"
      :vexpand true)
    (box 
      :class "sidedeco ${ locked ? 'active'+area : ''}"
      :vexpand true)))
      

(defwidget spacefiller []
  (box 
    :hexpand true
    :class "filler ${ locked ? 'inactive' : '' }"))

;; may need to change to fit all screen sizes
(defwindow fakecornerl
  :geometry (geometry 
              :x "0%"
              :y "0%"
              :width "100%"
              :height 1030
              :anchor "top center")
              
  :stacking "bottom"
  :exclusive false
  :monitor '["eDP-1", "<primary>", 0]'
  :wm-ignore false
  (box 
    :class "fakecornersl active ${locked ? 'locked' : ''}"))
